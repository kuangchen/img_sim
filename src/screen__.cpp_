#include <iostream>
#include <fstream>
#include <src/screen.h>
#include "boost/program_options.hpp" 

using namespace std;
using namespace img_sim;
namespace po = boost::program_options; 

screen::screen(double z,
	       double x0, double y0, 
	       double dx, double dy, 
	       size_t nx, size_t ny): 
  z(z), x0(x0), y0(y0), dx(dx), dy(dy), nx(nx), ny(ny), img_coord_list() {}

void screen::init(const string& conf) {
  po::variables_map vm; 
  po::options_description desc("Configuration"); 
  desc.add_options()
    ("z", po::value<double>(&z)->required(), "z")
    ("x0", po::value<double>(&x0)->required(), "x0")
    ("y0", po::value<double>(&y0)->required(), "y0")
    ("dx", po::value<double>(&dx)->required(), "dx")
    ("dy", po::value<double>(&dy)->required(), "dy")
    ("nx", po::value<size_t>(&nx)->required(), "nx")
    ("ny", po::value<size_t>(&ny)->required(), "ny");

  ifstream is(conf.c_str());
  if(!is) 
    throw string("file open error!");

  po::store(po::parse_config_file(is, desc, true), vm); 
  po::notify(vm);

  for (int i=0; i<ny; i++) 
    for (int j=0; j<nx; j++)
      img_coord_list.push_back({x0+j*dx, y0+i*dy});
}

screen::~screen() {};

size_t screen::num_row() const { 
  return ny; 
}

size_t screen::num_col() const { 
  return nx; 
};

const vector<v2d>& screen::get_img_coord_list() const {
  return img_coord_list;
}
